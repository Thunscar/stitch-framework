<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stitchcodes.core.mapper.SysDeptMapper">

    <resultMap id="SysDeptResult" type="com.stitchcodes.core.domain.SysDept">
        <id property="deptId" column="dept_id" jdbcType="BIGINT"/>
        <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
        <result property="ancestors" column="ancestors" jdbcType="VARCHAR"/>
        <result property="deptName" column="dept_name" jdbcType="VARCHAR"/>
        <result property="orderNum" column="order_num" jdbcType="INTEGER"/>
        <result property="leader" column="leader" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="CHAR"/>
        <result property="isDelete" column="is_delete" jdbcType="CHAR"/>
        <result property="createUser" column="create_user" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateUser" column="update_user" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="selectDeptVo">
        select d.dept_id,
               d.parent_id,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               d.create_user,
               d.create_time,
               d.update_user,
               d.update_time
        from sys_dept d
    </sql>

    <select id="selectDeptList" parameterType="com.stitchcodes.core.domain.SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        <where>
            <if test="deptId != null and deptId != '0'">
                d.dept_id = #{deptId}
            </if>
            <if test="parentId != null and parentId != '0'">
                d.parent_id = #{parentId}
            </if>
            <if test="deptName != null and deptName != ''">
                d.dept_name like concat('%',#{deptName},'%')
            </if>
            <if test="leader != null and leader != ''">
                d.leader like concat('%',#{leader},'%')
            </if>
            <if test="status != null and status != ''">
                d.status = ${status}
            </if>
            and d.is_delete = '0'
            ${params.dataScope}
            order by d.order_num,d.parent_id
        </where>
    </select>

    <select id="selectDeptListByRoleId" parameterType="Long" resultType="Long">
        select d.dept_id
        from sys_dept d
        left join sys_role_dept rd on rd.dept_id = d.dept_id
        where rd.role_id = #{roleId}
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptById" parameterType="Long" resultMap="SysDeptResult">
        select d.dept_id,
               d.parent_id,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               (select dept_name from sys_dept where dept_id = d.parent_id) parent_name
        from sys_dept d
        where d.dept_id = #{deptId}
          and d.is_delete = '0'
    </select>

    <select id="checkDeptHasUser" parameterType="Long" resultType="int">
        select count(1)
        from sys_user
        where dept_id = #{dept_id}
          and is_delete = '0'
    </select>

    <select id="hasChildrenDept" parameterType="Long" resultType="int">
        select count(1)
        from sys_dept
        where is_delete = '0'
          and parent_id = #{deptId}
        limit 1
    </select>

    <select id="selectChildrenByDeptId" parameterType="Long" resultMap="SysDeptResult">
        select *
        from sys_dept
        where find_in_set(#{deptId}, ancestors)
    </select>

    <select id="selectNormalChildrenByDeptId" parameterType="Long" resultType="int">
        select count(*)
        from sys_dept
        where find_in_set(#{deptId}, ancestors)
          and status = '0'
          and is_delete = '0'
    </select>

    <select id="checkDeptNameUnique" parameterType="SysMenu" resultMap="SysDeptResult">
        select *
        from sys_dept
        where dept_name = #{deptName}
          and parent_id = #{parentId}
          and is_delete = '0'
        limit 1
    </select>
    <select id="selectUnValidParentId" parameterType="SysDept" resultType="java.lang.Long">
        select distinct dept_id
        from sys_dept
        where dept_id = #{deptId}
           or parent_id = #{deptId}
            and is_delete = '0'
    </select>

    <insert id="insertDept" parameterType="SysDept">
        insert into sys_dept(
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="parentId != null">parent_id,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="deptName != null and deptName != ''">dept_name,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="createUser != null and createUser != ''">create_user,</if>
        create_time
        )
        values(
        <if test="deptId != null and deptId != 0">#{deptId},</if>
        <if test="parentId != null">#{parentId},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="deptName != null and deptName != ''">#{deptName},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="createUser != null and createUser != ''">#{createUser},</if>
        sysdate()
        )
    </insert>

    <update id="updateDept" parameterType="SysDept">
        update sys_dept
        set
        <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
        <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
        <if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
        <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
        <if test="leader != null and leader != ''">leader = #{leader},</if>
        <if test="phone != null and phone != ''">phone = #{phone},</if>
        <if test="email != null and email != ''">email = #{email},</if>
        <if test="status != null and status != ''">status = #{status},</if>
        update_time = sysdate()
        where dept_id = #{deptId}
    </update>

    <delete id="deleteDept" parameterType="Long">
        update sys_dept
        set is_delete = '1'
        where dept_id = #{deptId}
    </delete>


</mapper>
